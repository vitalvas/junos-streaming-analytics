//
// Copyrights (c)  2016, Juniper Networks, Inc.
// All rights reserved.
//

//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

//
// Chandresh Bhise, Rajesh Pillai, 2016
//
// This defines the gpb message format used by the npu memory utilization sensor
//
// The top level message is NetworkProcessorMemoryUtilization
// The message gives the Memory utilization summary for each NPU memory and
// per application based NPU memory utilization
//
//
// Version 1.0
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: npu_memory_utilization.proto

package jti

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Top level message NetworkProcessorMemoryUtilization
type NetworkProcessorMemoryUtilization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryStats []*NpuMemory `protobuf:"bytes,1,rep,name=memory_stats,json=memoryStats" json:"memory_stats,omitempty"`
}

func (x *NetworkProcessorMemoryUtilization) Reset() {
	*x = NetworkProcessorMemoryUtilization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npu_memory_utilization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkProcessorMemoryUtilization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkProcessorMemoryUtilization) ProtoMessage() {}

func (x *NetworkProcessorMemoryUtilization) ProtoReflect() protoreflect.Message {
	mi := &file_npu_memory_utilization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkProcessorMemoryUtilization.ProtoReflect.Descriptor instead.
func (*NetworkProcessorMemoryUtilization) Descriptor() ([]byte, []int) {
	return file_npu_memory_utilization_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkProcessorMemoryUtilization) GetMemoryStats() []*NpuMemory {
	if x != nil {
		return x.MemoryStats
	}
	return nil
}

// Message that describes the memory utilization for each Network Processor
type NpuMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Globally unique identifier for an NPU. This is of the form
	// "FPCX:NPUY", where X is the slot number of the line card and Y
	// is the index of the NPU on the linecard
	Identifier *string `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
	// NPU memory utilization statistics for different NPU memory types
	Summary []*NpuMemorySummary `protobuf:"bytes,2,rep,name=summary" json:"summary,omitempty"`
	// NPU memory utilization statistics for different NPU memory partitions
	Partition []*NpuMemoryPartition `protobuf:"bytes,3,rep,name=partition" json:"partition,omitempty"`
}

func (x *NpuMemory) Reset() {
	*x = NpuMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npu_memory_utilization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NpuMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpuMemory) ProtoMessage() {}

func (x *NpuMemory) ProtoReflect() protoreflect.Message {
	mi := &file_npu_memory_utilization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpuMemory.ProtoReflect.Descriptor instead.
func (*NpuMemory) Descriptor() ([]byte, []int) {
	return file_npu_memory_utilization_proto_rawDescGZIP(), []int{1}
}

func (x *NpuMemory) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *NpuMemory) GetSummary() []*NpuMemorySummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *NpuMemory) GetPartition() []*NpuMemoryPartition {
	if x != nil {
		return x.Partition
	}
	return nil
}

// Summary of NPU memory utilization for each type of memory
type NpuMemorySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the partition.
	ResourceName *string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	// Maximum memory size in bytes
	Size *uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	// How much memory is used up
	Allocated *uint64 `protobuf:"varint,3,opt,name=allocated" json:"allocated,omitempty"`
	// Utilization in percent
	Utilization *int32 `protobuf:"varint,4,opt,name=utilization" json:"utilization,omitempty"`
}

func (x *NpuMemorySummary) Reset() {
	*x = NpuMemorySummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npu_memory_utilization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NpuMemorySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpuMemorySummary) ProtoMessage() {}

func (x *NpuMemorySummary) ProtoReflect() protoreflect.Message {
	mi := &file_npu_memory_utilization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpuMemorySummary.ProtoReflect.Descriptor instead.
func (*NpuMemorySummary) Descriptor() ([]byte, []int) {
	return file_npu_memory_utilization_proto_rawDescGZIP(), []int{2}
}

func (x *NpuMemorySummary) GetResourceName() string {
	if x != nil && x.ResourceName != nil {
		return *x.ResourceName
	}
	return ""
}

func (x *NpuMemorySummary) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *NpuMemorySummary) GetAllocated() uint64 {
	if x != nil && x.Allocated != nil {
		return *x.Allocated
	}
	return 0
}

func (x *NpuMemorySummary) GetUtilization() int32 {
	if x != nil && x.Utilization != nil {
		return *x.Utilization
	}
	return 0
}

// A set of detailed stats for NPU memory partition
type NpuMemoryPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NPU memory Partition name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Name of the Application for which npu memory is allocated
	ApplicationName *string `protobuf:"bytes,2,opt,name=application_name,json=applicationName" json:"application_name,omitempty"`
	// Number of bytes allocated for the application
	BytesAllocated *uint32 `protobuf:"varint,3,opt,name=bytes_allocated,json=bytesAllocated" json:"bytes_allocated,omitempty"`
	// number of allocations for the application
	AllocationCount *uint32 `protobuf:"varint,4,opt,name=allocation_count,json=allocationCount" json:"allocation_count,omitempty"`
	// number of frees for the application
	FreeCount *uint32 `protobuf:"varint,5,opt,name=free_count,json=freeCount" json:"free_count,omitempty"`
}

func (x *NpuMemoryPartition) Reset() {
	*x = NpuMemoryPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npu_memory_utilization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NpuMemoryPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpuMemoryPartition) ProtoMessage() {}

func (x *NpuMemoryPartition) ProtoReflect() protoreflect.Message {
	mi := &file_npu_memory_utilization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpuMemoryPartition.ProtoReflect.Descriptor instead.
func (*NpuMemoryPartition) Descriptor() ([]byte, []int) {
	return file_npu_memory_utilization_proto_rawDescGZIP(), []int{3}
}

func (x *NpuMemoryPartition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NpuMemoryPartition) GetApplicationName() string {
	if x != nil && x.ApplicationName != nil {
		return *x.ApplicationName
	}
	return ""
}

func (x *NpuMemoryPartition) GetBytesAllocated() uint32 {
	if x != nil && x.BytesAllocated != nil {
		return *x.BytesAllocated
	}
	return 0
}

func (x *NpuMemoryPartition) GetAllocationCount() uint32 {
	if x != nil && x.AllocationCount != nil {
		return *x.AllocationCount
	}
	return 0
}

func (x *NpuMemoryPartition) GetFreeCount() uint32 {
	if x != nil && x.FreeCount != nil {
		return *x.FreeCount
	}
	return 0
}

var file_npu_memory_utilization_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*NetworkProcessorMemoryUtilization)(nil),
		Field:         11,
		Name:          "npu_memory_ext",
		Tag:           "bytes,11,opt,name=npu_memory_ext",
		Filename:      "npu_memory_utilization.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional NetworkProcessorMemoryUtilization npu_memory_ext = 11;
	E_NpuMemoryExt = &file_npu_memory_utilization_proto_extTypes[0]
)

var File_npu_memory_utilization_proto protoreflect.FileDescriptor

var file_npu_memory_utilization_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6e, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x21, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x4e, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x4e, 0x70, 0x75, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x4e, 0x70, 0x75, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x4e, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x61, 0x0a, 0x0e,
	0x6e, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17,
	0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x6e, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x74,
}

var (
	file_npu_memory_utilization_proto_rawDescOnce sync.Once
	file_npu_memory_utilization_proto_rawDescData = file_npu_memory_utilization_proto_rawDesc
)

func file_npu_memory_utilization_proto_rawDescGZIP() []byte {
	file_npu_memory_utilization_proto_rawDescOnce.Do(func() {
		file_npu_memory_utilization_proto_rawDescData = protoimpl.X.CompressGZIP(file_npu_memory_utilization_proto_rawDescData)
	})
	return file_npu_memory_utilization_proto_rawDescData
}

var file_npu_memory_utilization_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_npu_memory_utilization_proto_goTypes = []interface{}{
	(*NetworkProcessorMemoryUtilization)(nil), // 0: NetworkProcessorMemoryUtilization
	(*NpuMemory)(nil),                         // 1: NpuMemory
	(*NpuMemorySummary)(nil),                  // 2: NpuMemorySummary
	(*NpuMemoryPartition)(nil),                // 3: NpuMemoryPartition
	(*JuniperNetworksSensors)(nil),            // 4: JuniperNetworksSensors
}
var file_npu_memory_utilization_proto_depIdxs = []int32{
	1, // 0: NetworkProcessorMemoryUtilization.memory_stats:type_name -> NpuMemory
	2, // 1: NpuMemory.summary:type_name -> NpuMemorySummary
	3, // 2: NpuMemory.partition:type_name -> NpuMemoryPartition
	4, // 3: npu_memory_ext:extendee -> JuniperNetworksSensors
	0, // 4: npu_memory_ext:type_name -> NetworkProcessorMemoryUtilization
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_npu_memory_utilization_proto_init() }
func file_npu_memory_utilization_proto_init() {
	if File_npu_memory_utilization_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_npu_memory_utilization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkProcessorMemoryUtilization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npu_memory_utilization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NpuMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npu_memory_utilization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NpuMemorySummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npu_memory_utilization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NpuMemoryPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npu_memory_utilization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_npu_memory_utilization_proto_goTypes,
		DependencyIndexes: file_npu_memory_utilization_proto_depIdxs,
		MessageInfos:      file_npu_memory_utilization_proto_msgTypes,
		ExtensionInfos:    file_npu_memory_utilization_proto_extTypes,
	}.Build()
	File_npu_memory_utilization_proto = out.File
	file_npu_memory_utilization_proto_rawDesc = nil
	file_npu_memory_utilization_proto_goTypes = nil
	file_npu_memory_utilization_proto_depIdxs = nil
}
