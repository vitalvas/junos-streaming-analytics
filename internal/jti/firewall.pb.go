//
// Copyrights (c) 2015, 2016, Juniper Networks, Inc.
// All rights reserved.
//

//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

//
// Liang Zhang, 2015-05-29
//
// This file defines the messages in Protocol Buffers used by
// the firewall sensor. The top-level message is Firewall.
//
// Version 1.1
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.7
// source: firewall.proto

package jti

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// Top-level message
//
type Firewall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirewallStats []*FirewallStats `protobuf:"bytes,1,rep,name=firewall_stats,json=firewallStats" json:"firewall_stats,omitempty"`
}

func (x *Firewall) Reset() {
	*x = Firewall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Firewall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firewall) ProtoMessage() {}

func (x *Firewall) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firewall.ProtoReflect.Descriptor instead.
func (*Firewall) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{0}
}

func (x *Firewall) GetFirewallStats() []*FirewallStats {
	if x != nil {
		return x.FirewallStats
	}
	return nil
}

//
// Firewall filter statistics
//
type FirewallStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterName *string `protobuf:"bytes,1,req,name=filter_name,json=filterName" json:"filter_name,omitempty"`
	// The Unix timestamp (seconds since 00:00:00 UTC 1970-01-01) of
	// last filter state change event such as filter add, filter change,
	// or counter clear.
	Timestamp                *uint64                     `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	MemoryUsage              []*MemoryUsage              `protobuf:"bytes,3,rep,name=memory_usage,json=memoryUsage" json:"memory_usage,omitempty"`
	CounterStats             []*CounterStats             `protobuf:"bytes,4,rep,name=counter_stats,json=counterStats" json:"counter_stats,omitempty"`
	PolicerStats             []*PolicerStats             `protobuf:"bytes,5,rep,name=policer_stats,json=policerStats" json:"policer_stats,omitempty"`
	HierarchicalPolicerStats []*HierarchicalPolicerStats `protobuf:"bytes,6,rep,name=hierarchical_policer_stats,json=hierarchicalPolicerStats" json:"hierarchical_policer_stats,omitempty"`
}

func (x *FirewallStats) Reset() {
	*x = FirewallStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallStats) ProtoMessage() {}

func (x *FirewallStats) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallStats.ProtoReflect.Descriptor instead.
func (*FirewallStats) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{1}
}

func (x *FirewallStats) GetFilterName() string {
	if x != nil && x.FilterName != nil {
		return *x.FilterName
	}
	return ""
}

func (x *FirewallStats) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *FirewallStats) GetMemoryUsage() []*MemoryUsage {
	if x != nil {
		return x.MemoryUsage
	}
	return nil
}

func (x *FirewallStats) GetCounterStats() []*CounterStats {
	if x != nil {
		return x.CounterStats
	}
	return nil
}

func (x *FirewallStats) GetPolicerStats() []*PolicerStats {
	if x != nil {
		return x.PolicerStats
	}
	return nil
}

func (x *FirewallStats) GetHierarchicalPolicerStats() []*HierarchicalPolicerStats {
	if x != nil {
		return x.HierarchicalPolicerStats
	}
	return nil
}

//
// Memory usage
//
type MemoryUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The router has typically several types of memories (e.g. CPU's memory,
	// ASIC's forwarding memories) in which the firewall object is written.
	// This field indicates the name of the memory subsystem whose utilization
	// is being reported.
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The amount of the memory allocated in bytes to the filter
	Allocated *uint64 `protobuf:"varint,2,opt,name=allocated" json:"allocated,omitempty"`
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUsage.ProtoReflect.Descriptor instead.
func (*MemoryUsage) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{2}
}

func (x *MemoryUsage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MemoryUsage) GetAllocated() uint64 {
	if x != nil && x.Allocated != nil {
		return *x.Allocated
	}
	return 0
}

//
// Counter statistics
//
type CounterStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counter name
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The total number of packets seen by the counter
	Packets *uint64 `protobuf:"varint,2,opt,name=packets" json:"packets,omitempty"`
	// The total number of bytes seen by the counter
	Bytes *uint64 `protobuf:"varint,3,opt,name=bytes" json:"bytes,omitempty"`
}

func (x *CounterStats) Reset() {
	*x = CounterStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterStats) ProtoMessage() {}

func (x *CounterStats) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterStats.ProtoReflect.Descriptor instead.
func (*CounterStats) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{3}
}

func (x *CounterStats) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CounterStats) GetPackets() uint64 {
	if x != nil && x.Packets != nil {
		return *x.Packets
	}
	return 0
}

func (x *CounterStats) GetBytes() uint64 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

//
// Policer statistics
//
type PolicerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Policer instance name
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The total number of packets marked out-of-specification by the policer
	OutOfSpecPackets *uint64 `protobuf:"varint,2,opt,name=out_of_spec_packets,json=outOfSpecPackets" json:"out_of_spec_packets,omitempty"`
	// The total number of bytes marked out-of-specification by the policer
	OutOfSpecBytes *uint64 `protobuf:"varint,3,opt,name=out_of_spec_bytes,json=outOfSpecBytes" json:"out_of_spec_bytes,omitempty"`
	// Additional statistics when enhanced policer statistics are available
	ExtendedPolicerStats *ExtendedPolicerStats `protobuf:"bytes,4,opt,name=extended_policer_stats,json=extendedPolicerStats" json:"extended_policer_stats,omitempty"`
}

func (x *PolicerStats) Reset() {
	*x = PolicerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicerStats) ProtoMessage() {}

func (x *PolicerStats) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicerStats.ProtoReflect.Descriptor instead.
func (*PolicerStats) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{4}
}

func (x *PolicerStats) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PolicerStats) GetOutOfSpecPackets() uint64 {
	if x != nil && x.OutOfSpecPackets != nil {
		return *x.OutOfSpecPackets
	}
	return 0
}

func (x *PolicerStats) GetOutOfSpecBytes() uint64 {
	if x != nil && x.OutOfSpecBytes != nil {
		return *x.OutOfSpecBytes
	}
	return 0
}

func (x *PolicerStats) GetExtendedPolicerStats() *ExtendedPolicerStats {
	if x != nil {
		return x.ExtendedPolicerStats
	}
	return nil
}

//
// Extended policer statistics when enhanced policer statistics are available
//
type ExtendedPolicerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The total number of packets subjected to policing
	OfferedPackets *uint64 `protobuf:"varint,1,opt,name=offered_packets,json=offeredPackets" json:"offered_packets,omitempty"`
	// The total number of bytes subjected to policing
	OfferedBytes *uint64 `protobuf:"varint,2,opt,name=offered_bytes,json=offeredBytes" json:"offered_bytes,omitempty"`
	// The total number of packets not discarded by the policer
	TransmittedPackets *uint64 `protobuf:"varint,3,opt,name=transmitted_packets,json=transmittedPackets" json:"transmitted_packets,omitempty"`
	// The total number of bytes not discarded by the policer
	TransmittedBytes *uint64 `protobuf:"varint,4,opt,name=transmitted_bytes,json=transmittedBytes" json:"transmitted_bytes,omitempty"`
}

func (x *ExtendedPolicerStats) Reset() {
	*x = ExtendedPolicerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendedPolicerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedPolicerStats) ProtoMessage() {}

func (x *ExtendedPolicerStats) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedPolicerStats.ProtoReflect.Descriptor instead.
func (*ExtendedPolicerStats) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{5}
}

func (x *ExtendedPolicerStats) GetOfferedPackets() uint64 {
	if x != nil && x.OfferedPackets != nil {
		return *x.OfferedPackets
	}
	return 0
}

func (x *ExtendedPolicerStats) GetOfferedBytes() uint64 {
	if x != nil && x.OfferedBytes != nil {
		return *x.OfferedBytes
	}
	return 0
}

func (x *ExtendedPolicerStats) GetTransmittedPackets() uint64 {
	if x != nil && x.TransmittedPackets != nil {
		return *x.TransmittedPackets
	}
	return 0
}

func (x *ExtendedPolicerStats) GetTransmittedBytes() uint64 {
	if x != nil && x.TransmittedBytes != nil {
		return *x.TransmittedBytes
	}
	return 0
}

//
// Hierarchical policer statistics
//
type HierarchicalPolicerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hierarchical policer instance name
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The total number of packets marked out-of-specification by
	// the premium policer
	PremiumPackets *uint64 `protobuf:"varint,2,opt,name=premium_packets,json=premiumPackets" json:"premium_packets,omitempty"`
	// The total number of bytes marked out-of-specification by
	// the premium policer
	PremiumBytes *uint64 `protobuf:"varint,3,opt,name=premium_bytes,json=premiumBytes" json:"premium_bytes,omitempty"`
	// The total number of packets marked out-of-specification by
	// the aggregate policer
	AggregatePackets *uint64 `protobuf:"varint,4,opt,name=aggregate_packets,json=aggregatePackets" json:"aggregate_packets,omitempty"`
	// The total number of bytes marked out-of-specification by
	// the aggregate policer
	AggregateBytes *uint64 `protobuf:"varint,5,opt,name=aggregate_bytes,json=aggregateBytes" json:"aggregate_bytes,omitempty"`
}

func (x *HierarchicalPolicerStats) Reset() {
	*x = HierarchicalPolicerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HierarchicalPolicerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HierarchicalPolicerStats) ProtoMessage() {}

func (x *HierarchicalPolicerStats) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HierarchicalPolicerStats.ProtoReflect.Descriptor instead.
func (*HierarchicalPolicerStats) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{6}
}

func (x *HierarchicalPolicerStats) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HierarchicalPolicerStats) GetPremiumPackets() uint64 {
	if x != nil && x.PremiumPackets != nil {
		return *x.PremiumPackets
	}
	return 0
}

func (x *HierarchicalPolicerStats) GetPremiumBytes() uint64 {
	if x != nil && x.PremiumBytes != nil {
		return *x.PremiumBytes
	}
	return 0
}

func (x *HierarchicalPolicerStats) GetAggregatePackets() uint64 {
	if x != nil && x.AggregatePackets != nil {
		return *x.AggregatePackets
	}
	return 0
}

func (x *HierarchicalPolicerStats) GetAggregateBytes() uint64 {
	if x != nil && x.AggregateBytes != nil {
		return *x.AggregateBytes
	}
	return 0
}

var file_firewall_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*Firewall)(nil),
		Field:         6,
		Name:          "jnpr_firewall_ext",
		Tag:           "bytes,6,opt,name=jnpr_firewall_ext",
		Filename:      "firewall.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional Firewall jnpr_firewall_ext = 6;
	E_JnprFirewallExt = &file_firewall_proto_extTypes[0]
)

var File_firewall_proto protoreflect.FileDescriptor

var file_firewall_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x08, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x12, 0x35, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x46, 0x69, 0x72, 0x65,
	0x77, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x0d, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x42,
	0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0d,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x57, 0x0a, 0x1a, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x63, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x18, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x20, 0x01, 0x52, 0x09, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x22, 0xde, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x13, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18,
	0x01, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x63, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05,
	0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x14, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0f, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0d, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x32, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18,
	0x01, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x18, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x19, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x42, 0x05,
	0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0f, 0x70,
	0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x6d, 0x69,
	0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x3a, 0x4e, 0x0a, 0x11, 0x6a,
	0x6e, 0x70, 0x72, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x78, 0x74,
	0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x0f, 0x6a, 0x6e, 0x70, 0x72,
	0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x42, 0x08, 0x5a, 0x06, 0x2e,
	0x2e, 0x2f, 0x6a, 0x74, 0x69,
}

var (
	file_firewall_proto_rawDescOnce sync.Once
	file_firewall_proto_rawDescData = file_firewall_proto_rawDesc
)

func file_firewall_proto_rawDescGZIP() []byte {
	file_firewall_proto_rawDescOnce.Do(func() {
		file_firewall_proto_rawDescData = protoimpl.X.CompressGZIP(file_firewall_proto_rawDescData)
	})
	return file_firewall_proto_rawDescData
}

var file_firewall_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_firewall_proto_goTypes = []interface{}{
	(*Firewall)(nil),                 // 0: Firewall
	(*FirewallStats)(nil),            // 1: FirewallStats
	(*MemoryUsage)(nil),              // 2: MemoryUsage
	(*CounterStats)(nil),             // 3: CounterStats
	(*PolicerStats)(nil),             // 4: PolicerStats
	(*ExtendedPolicerStats)(nil),     // 5: ExtendedPolicerStats
	(*HierarchicalPolicerStats)(nil), // 6: HierarchicalPolicerStats
	(*JuniperNetworksSensors)(nil),   // 7: JuniperNetworksSensors
}
var file_firewall_proto_depIdxs = []int32{
	1, // 0: Firewall.firewall_stats:type_name -> FirewallStats
	2, // 1: FirewallStats.memory_usage:type_name -> MemoryUsage
	3, // 2: FirewallStats.counter_stats:type_name -> CounterStats
	4, // 3: FirewallStats.policer_stats:type_name -> PolicerStats
	6, // 4: FirewallStats.hierarchical_policer_stats:type_name -> HierarchicalPolicerStats
	5, // 5: PolicerStats.extended_policer_stats:type_name -> ExtendedPolicerStats
	7, // 6: jnpr_firewall_ext:extendee -> JuniperNetworksSensors
	0, // 7: jnpr_firewall_ext:type_name -> Firewall
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	7, // [7:8] is the sub-list for extension type_name
	6, // [6:7] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_firewall_proto_init() }
func file_firewall_proto_init() {
	if File_firewall_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_firewall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Firewall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendedPolicerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HierarchicalPolicerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_firewall_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_firewall_proto_goTypes,
		DependencyIndexes: file_firewall_proto_depIdxs,
		MessageInfos:      file_firewall_proto_msgTypes,
		ExtensionInfos:    file_firewall_proto_extTypes,
	}.Build()
	File_firewall_proto = out.File
	file_firewall_proto_rawDesc = nil
	file_firewall_proto_goTypes = nil
	file_firewall_proto_depIdxs = nil
}
